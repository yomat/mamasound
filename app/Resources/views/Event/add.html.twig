<div class="col-lg-12">

	<div class="card">

		<h2 class="card-header">New event : {{ genre.name }} !</h2>

		<div class="card-block">

			{{ form_start(form, {'attr': {'class': ''}}) }}

				<div class="card-img fileContainer">
					<img id="event-image" class="card-img" src="{{ asset('images/mama.png') }}" alt="image de l'event"/>
					{{ form_errors(form.image.file) }}
					{{ form_widget(form.image.file) }}
				</div>

				<div class="form-group card-title">
					{{ form_errors(form.title) }}
					{#{{ form_label(form.title, 'Nom', {'label_attr': {'class': 'col-form-label card-title'}}) }}#}
					{{ form_widget(form.title) }}
				</div>

				<div class="form-group row">
					{{ form_errors(form.groups) }}
					{{ form_label(form.groups, 'Artistes', {'label_attr': {'class': 'col-1 col-form-label'}}) }}
					{#<a href="#" id="add_group" class="btn btn-default">Nouvel artiste</a>#}
					<div class="col-11">
						{{ form_widget(form.groups) }}
					</div>
				</div>

				<div class="form-group row">
					{{ form_errors(form.place) }}
					{{ form_label(form.place, 'Lieu', {'label_attr': {'class': 'col-1 col-form-label'}}) }}
					<div class="col-8">
						{{ form_widget(form.place) }}
					</div>

					{{ form_errors(form.price) }}
					{{ form_label(form.price, 'Prix', {'label_attr': {'class': 'col-1 col-form-label'}}) }}
					<div class="col-2">
						{{ form_widget(form.price) }}
					</div>
				</div>

				<div class="form-group row">
					{{ form_errors(form.type) }}
					{#{{ form_label(form.type, 'Type', {'label_attr': {'class': 'col-form-label'}}) }}#}
					{{ form_widget(form.type,
							{'attr': {
									'value': genre.id,
									'style': 'display: none;'
								}
							}
						)
					}}

					{{ form_errors(form.category) }}
					{{ form_label(form.category, 'Catégorie', {'label_attr': {'class': 'col-1 col-form-label'}}) }}
					<div class="col-5">
						{{ form_widget(form.category) }}
					</div>

					{{ form_errors(form.mamaEvent) }}
					{{ form_label(form.mamaEvent, 'Mame Event', {'label_attr': {'class': 'col-1 col-form-label'}}) }}
					<div class="col-5">
							{{ form_widget(form.mamaEvent) }}
					</div>

				</div>

				<div class="form-group row">
					{{ form_errors(form.start) }}
					{{ form_label(form.start, 'Horaires', {'label_attr': {'class': 'col-1 col-form-label'}}) }}

					<div class="col-5">
						{{ form_widget(form.start) }}
					</div>
					{{ form_errors(form.end) }}
					{#{{ form_label(form.end, 'Fin', {'label_attr': {'class': 'col-form-label'}}) }}#}
					<div class="col-5">
						{{ form_widget(form.end) }}
					</div>
				</div>

				<div class="form-group row">
					{{ form_errors(form.article) }}
					{{ form_label(form.article, 'Article', {'label_attr': {'class': 'col-1 col-form-label'}}) }}
					<div class="col-11">
						{{ form_widget(form.article) }}
					</div>
				</div>

				<input class="btn btn-primary" type="submit" value="Enregistrer"/>
				<button class="btn btn-secondary"
						type="button"
						onclick="listEvents()">
					Retour aux événements
				</button>
			{{ form_end(form) }}
		</div>
	</div>
</div>

<!-- Genre : valeur par défaut du select input qui est caché -->
<script>
	$(document).ready(function() {
		$('#event_type').val ($('#event_type').attr("value"));
	});
</script>
<!-- Select2 -->
<script>
	$(document).ready(function() {
		// Place
		$('#event_place').select2({
			ajax: {
				type:"POST",
				url: "{{ path('placesLike') }}",
				dataType: 'json',
				data: function (params) {return 'search_term=' +  params.term;},
				delay: 250,
				processResults: function (data) {
					return {
						results: $.map(data, function(placeObject){
							return {id: placeObject.id, text: placeObject.name};
						})
					};
				}
			}
		});

		// Groupes
		$('#event_groups').select2({
			ajax: {
				type:"POST",
				url: "{{ path('groupesLike') }}",
				dataType: 'json',
				data: function (params) {return 'search_term=' +  params.term;},
				delay: 250,
				processResults: function (data) {
					return {
						results: $.map(data, function(placeObject){
							return {id: placeObject.id, text: placeObject.name};
						})
					};
				}
			}
		});
	});
</script>

<!-- Datepickers -->
<script>
	$(document).ready(function() {
		// 1. suppression des datepickers potentiellement stockés dans l'élément datepickers-container
		var node = document.getElementById('datepickers-container');
		if ( node != null )
			while (node.firstChild) {
				node.removeChild(node.firstChild);
			}
		// 2. ajout des datepickers pour les champs
		$('#event_start').datepicker({
			language: 'fr',
			timepicker: true,
			timeFormat:'hh:ii'
		});
		$('#event_end').datepicker({
			language: 'fr',
			timepicker: true,
			timeFormat:'hh:ii'
		});
	});
</script>

<!-- submit ajax -->
<script>
	// Surcharge du submit -> ajax -> reponse -> modification du DOM

	// based on: http://codepen.io/tcannonfodder/pen/avJyRJ
	// based on: http://stackoverflow.com/a/9622978
	$('form[name="event"]').submit(function(e) {
		center_div = $('#center');
		e.preventDefault();
		var form = e.target;
		var data = new FormData(form);
		$.ajax({
					url: $(this).attr("action"),
					method: "POST",
					processData: false,
					contentType: false,
					data: data
				})
				.done(function (data){
					center_div.html(data);
				});
	});
</script>

<!-- image upload pre visualisation -->
<script>
	// Visualisation de l'image
	$(document).ready(function() {
		$('#event_image_file').change(function() {
			readURL($('#event_image_file'));
		});
	});

	function readURL(input) {
		var files = input.prop("files");
		if (files && files[0]) {
			var reader = new FileReader();
			reader.onload = function (e) {
				$('#event-image')
						.width("200px")
						.attr('src', e.target.result)
						.maxHeight("200px")
				;
			};
			reader.readAsDataURL(files[0]);
		}
	}
</script>

<script>
	// AJOUT du LIEU
	/*$('#event_place').autocomplete({
		source : function(requete, reponse){
			//alert("source callback");
			var namePart = $('#event_place').val();
			var DATA = 'namePart=' + namePart;
			$.ajax({
				type:"POST",
				url : "{{ path('places') }}",
				dataType : 'json',
				data : DATA,

				success : function(donnee){
					//alert(donnee);
					reponse($.map(donnee, function(objet){
						return objet.name;
					}));
				}
			});
		}
	});*/
</script>


{#
<script type="text/javascript">
	// AJOUT des ARTISTES
	$(document).ready(function() {
		// On récupère la balise <div> en question qui contient l'attribut « data-prototype » qui nous intéresse.
		var $container = $('div#event_groups');

		// On définit un compteur unique pour nommer les champs qu'on va ajouter dynamiquement
		var index = $container.find(':input').length;

		// On ajoute un nouveau champ à chaque clic sur le lien d'ajout.
		$('#add_group').click(function(e) {
			addGroup($container);
			e.preventDefault(); // évite qu'un # apparaisse dans l'URL
			return false;
		});

		// On ajoute un premier champ automatiquement s'il n'en existe pas déjà un (cas d'une nouvelle annonce par exemple).
		if (index == 0) {
			addGroup($container);
		} else {
			// S'il existe déjà des catégories, on ajoute un lien de suppression pour chacune d'entre elles
			$container.children('div').each(function() {
				addDeleteLink($(this));
			});
		}

		// La fonction qui ajoute un formulaire GroupeType
		function addGroup($container) {
			// Dans le contenu de l'attribut « data-prototype », on remplace :
			// - le texte "__name__label__" qu'il contient par le label du champ
			// - le texte "__name__" qu'il contient par le numéro du champ
			var template = $container.attr('data-prototype')
					.replace(/__name__label__/g, 'Artiste n°' + (index+1))
					.replace(/__name__/g,        index)
					;

			// On crée un objet jquery qui contient ce template
			var $prototype = $(template);

			// On ajoute au prototype un lien pour pouvoir supprimer la catégorie
			addDeleteLink($prototype);

			// On ajoute le prototype modifié à la fin de la balise <div>
			$container.append($prototype);

			// Enfin, on incrémente le compteur pour que le prochain ajout se fasse avec un autre numéro
			index++;
		}

		// La fonction qui ajoute un lien de suppression d'une catégorie
		function addDeleteLink($prototype) {
			// Création du lien
			var $deleteLink = $('<a href="#" class="btn btn-danger">Supprimer</a>');

			// Ajout du lien
			$prototype.append($deleteLink);

			// Ajout du listener sur le clic du lien pour effectivement supprimer la catégorie
			$deleteLink.click(function(e) {
				$prototype.remove();

				e.preventDefault(); // évite qu'un # apparaisse dans l'URL
				return false;
			});
		}
	});
</script>
#}
